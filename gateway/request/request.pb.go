// Code generated by protoc-gen-go.
// source: request.proto
// DO NOT EDIT!

/*
Package request is a generated protocol buffer package.

It is generated from these files:
	request.proto

It has these top-level messages:
	RequestId
	Point
	Receiver
	TimeFrame
	Payment
	RequestInformation
*/
package request

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RequestInformation_Dimension int32

const (
	RequestInformation_GRANDE RequestInformation_Dimension = 0
	RequestInformation_TALL   RequestInformation_Dimension = 1
	RequestInformation_VENTI  RequestInformation_Dimension = 2
)

var RequestInformation_Dimension_name = map[int32]string{
	0: "GRANDE",
	1: "TALL",
	2: "VENTI",
}
var RequestInformation_Dimension_value = map[string]int32{
	"GRANDE": 0,
	"TALL":   1,
	"VENTI":  2,
}

func (x RequestInformation_Dimension) String() string {
	return proto.EnumName(RequestInformation_Dimension_name, int32(x))
}
func (RequestInformation_Dimension) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{5, 0}
}

type RequestInformation_Weight int32

const (
	RequestInformation_LETTER          RequestInformation_Weight = 0
	RequestInformation_ZALANDO_PACKAGE RequestInformation_Weight = 1
	RequestInformation_PIG             RequestInformation_Weight = 2
)

var RequestInformation_Weight_name = map[int32]string{
	0: "LETTER",
	1: "ZALANDO_PACKAGE",
	2: "PIG",
}
var RequestInformation_Weight_value = map[string]int32{
	"LETTER":          0,
	"ZALANDO_PACKAGE": 1,
	"PIG":             2,
}

func (x RequestInformation_Weight) String() string {
	return proto.EnumName(RequestInformation_Weight_name, int32(x))
}
func (RequestInformation_Weight) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5, 1} }

type RequestId struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *RequestId) Reset()                    { *m = RequestId{} }
func (m *RequestId) String() string            { return proto.CompactTextString(m) }
func (*RequestId) ProtoMessage()               {}
func (*RequestId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RequestId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Point struct {
	Latitude  float32 `protobuf:"fixed32,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude float32 `protobuf:"fixed32,2,opt,name=longitude" json:"longitude,omitempty"`
}

func (m *Point) Reset()                    { *m = Point{} }
func (m *Point) String() string            { return proto.CompactTextString(m) }
func (*Point) ProtoMessage()               {}
func (*Point) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Point) GetLatitude() float32 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Point) GetLongitude() float32 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

type Receiver struct {
	Phone string `protobuf:"bytes,1,opt,name=phone" json:"phone,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *Receiver) Reset()                    { *m = Receiver{} }
func (m *Receiver) String() string            { return proto.CompactTextString(m) }
func (*Receiver) ProtoMessage()               {}
func (*Receiver) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Receiver) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Receiver) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type TimeFrame struct {
	Asap     bool  `protobuf:"varint,1,opt,name=asap" json:"asap,omitempty"`
	TimeFrom int32 `protobuf:"varint,2,opt,name=timeFrom" json:"timeFrom,omitempty"`
	TimeTo   int32 `protobuf:"varint,3,opt,name=timeTo" json:"timeTo,omitempty"`
}

func (m *TimeFrame) Reset()                    { *m = TimeFrame{} }
func (m *TimeFrame) String() string            { return proto.CompactTextString(m) }
func (*TimeFrame) ProtoMessage()               {}
func (*TimeFrame) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *TimeFrame) GetAsap() bool {
	if m != nil {
		return m.Asap
	}
	return false
}

func (m *TimeFrame) GetTimeFrom() int32 {
	if m != nil {
		return m.TimeFrom
	}
	return 0
}

func (m *TimeFrame) GetTimeTo() int32 {
	if m != nil {
		return m.TimeTo
	}
	return 0
}

type Payment struct {
	Reference string `protobuf:"bytes,1,opt,name=reference" json:"reference,omitempty"`
}

func (m *Payment) Reset()                    { *m = Payment{} }
func (m *Payment) String() string            { return proto.CompactTextString(m) }
func (*Payment) ProtoMessage()               {}
func (*Payment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Payment) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type RequestInformation struct {
	Destination *Point                       `protobuf:"bytes,1,opt,name=destination" json:"destination,omitempty"`
	Origin      *Point                       `protobuf:"bytes,2,opt,name=origin" json:"origin,omitempty"`
	Picture     []byte                       `protobuf:"bytes,3,opt,name=picture,proto3" json:"picture,omitempty"`
	Dimension   RequestInformation_Dimension `protobuf:"varint,4,opt,name=dimension,enum=request.RequestInformation_Dimension" json:"dimension,omitempty"`
	Weight      RequestInformation_Weight    `protobuf:"varint,5,opt,name=weight,enum=request.RequestInformation_Weight" json:"weight,omitempty"`
	Pickup      *TimeFrame                   `protobuf:"bytes,6,opt,name=pickup" json:"pickup,omitempty"`
	Delivery    *TimeFrame                   `protobuf:"bytes,7,opt,name=delivery" json:"delivery,omitempty"`
	Receiver    *Receiver                    `protobuf:"bytes,8,opt,name=receiver" json:"receiver,omitempty"`
}

func (m *RequestInformation) Reset()                    { *m = RequestInformation{} }
func (m *RequestInformation) String() string            { return proto.CompactTextString(m) }
func (*RequestInformation) ProtoMessage()               {}
func (*RequestInformation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *RequestInformation) GetDestination() *Point {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (m *RequestInformation) GetOrigin() *Point {
	if m != nil {
		return m.Origin
	}
	return nil
}

func (m *RequestInformation) GetPicture() []byte {
	if m != nil {
		return m.Picture
	}
	return nil
}

func (m *RequestInformation) GetDimension() RequestInformation_Dimension {
	if m != nil {
		return m.Dimension
	}
	return RequestInformation_GRANDE
}

func (m *RequestInformation) GetWeight() RequestInformation_Weight {
	if m != nil {
		return m.Weight
	}
	return RequestInformation_LETTER
}

func (m *RequestInformation) GetPickup() *TimeFrame {
	if m != nil {
		return m.Pickup
	}
	return nil
}

func (m *RequestInformation) GetDelivery() *TimeFrame {
	if m != nil {
		return m.Delivery
	}
	return nil
}

func (m *RequestInformation) GetReceiver() *Receiver {
	if m != nil {
		return m.Receiver
	}
	return nil
}

func init() {
	proto.RegisterType((*RequestId)(nil), "request.RequestId")
	proto.RegisterType((*Point)(nil), "request.Point")
	proto.RegisterType((*Receiver)(nil), "request.Receiver")
	proto.RegisterType((*TimeFrame)(nil), "request.TimeFrame")
	proto.RegisterType((*Payment)(nil), "request.Payment")
	proto.RegisterType((*RequestInformation)(nil), "request.RequestInformation")
	proto.RegisterEnum("request.RequestInformation_Dimension", RequestInformation_Dimension_name, RequestInformation_Dimension_value)
	proto.RegisterEnum("request.RequestInformation_Weight", RequestInformation_Weight_name, RequestInformation_Weight_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Request service

type RequestClient interface {
	CreateRequest(ctx context.Context, in *RequestInformation, opts ...grpc.CallOption) (*RequestId, error)
	GetRequest(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*RequestInformation, error)
}

type requestClient struct {
	cc *grpc.ClientConn
}

func NewRequestClient(cc *grpc.ClientConn) RequestClient {
	return &requestClient{cc}
}

func (c *requestClient) CreateRequest(ctx context.Context, in *RequestInformation, opts ...grpc.CallOption) (*RequestId, error) {
	out := new(RequestId)
	err := grpc.Invoke(ctx, "/request.Request/CreateRequest", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *requestClient) GetRequest(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*RequestInformation, error) {
	out := new(RequestInformation)
	err := grpc.Invoke(ctx, "/request.Request/GetRequest", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Request service

type RequestServer interface {
	CreateRequest(context.Context, *RequestInformation) (*RequestId, error)
	GetRequest(context.Context, *RequestId) (*RequestInformation, error)
}

func RegisterRequestServer(s *grpc.Server, srv RequestServer) {
	s.RegisterService(&_Request_serviceDesc, srv)
}

func _Request_CreateRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestInformation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RequestServer).CreateRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/request.Request/CreateRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RequestServer).CreateRequest(ctx, req.(*RequestInformation))
	}
	return interceptor(ctx, in, info, handler)
}

func _Request_GetRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RequestServer).GetRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/request.Request/GetRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RequestServer).GetRequest(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

var _Request_serviceDesc = grpc.ServiceDesc{
	ServiceName: "request.Request",
	HandlerType: (*RequestServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRequest",
			Handler:    _Request_CreateRequest_Handler,
		},
		{
			MethodName: "GetRequest",
			Handler:    _Request_GetRequest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "request.proto",
}

func init() { proto.RegisterFile("request.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 584 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x94, 0xcd, 0x6e, 0xd3, 0x4e,
	0x14, 0xc5, 0x6b, 0xa7, 0x71, 0xec, 0xdb, 0x8f, 0xbf, 0xff, 0x17, 0xa8, 0xac, 0xb4, 0x8b, 0x6a,
	0x24, 0xa0, 0xaa, 0x68, 0x02, 0x81, 0x55, 0x77, 0x6e, 0x1b, 0xa2, 0x8a, 0xa8, 0x44, 0x83, 0x45,
	0x11, 0x1b, 0x64, 0xe2, 0x69, 0x3a, 0x22, 0x9e, 0x31, 0xe3, 0x49, 0x51, 0x85, 0xd8, 0xf0, 0x0a,
	0xbc, 0x01, 0xcf, 0xc1, 0x5b, 0xf0, 0x0a, 0x3c, 0x03, 0x6b, 0xe4, 0xf1, 0x47, 0x2b, 0x15, 0xba,
	0x9b, 0x3b, 0xe7, 0x77, 0xce, 0xdc, 0xb9, 0x93, 0x18, 0xd6, 0x14, 0xfb, 0xb8, 0x60, 0xb9, 0xee,
	0x65, 0x4a, 0x6a, 0x89, 0x9d, 0xaa, 0xec, 0x6e, 0xcd, 0xa4, 0x9c, 0xcd, 0x59, 0x3f, 0xce, 0x78,
	0x3f, 0x16, 0x42, 0xea, 0x58, 0x73, 0x29, 0xf2, 0x12, 0x23, 0x9b, 0xe0, 0xd1, 0x12, 0x3c, 0x4e,
	0x70, 0x1d, 0x6c, 0x9e, 0x04, 0xd6, 0xb6, 0xb5, 0xe3, 0x51, 0x9b, 0x27, 0x24, 0x84, 0xf6, 0x44,
	0x72, 0xa1, 0xb1, 0x0b, 0xee, 0x3c, 0xd6, 0x5c, 0x2f, 0x12, 0x66, 0x64, 0x9b, 0x36, 0x35, 0x6e,
	0x81, 0x37, 0x97, 0x62, 0x56, 0x8a, 0xb6, 0x11, 0xaf, 0x36, 0xc8, 0x33, 0x70, 0x29, 0x9b, 0x32,
	0x7e, 0xc1, 0x14, 0xde, 0x85, 0x76, 0x76, 0x2e, 0x05, 0xab, 0x4e, 0x28, 0x0b, 0x44, 0x58, 0x16,
	0x71, 0x5a, 0x5a, 0x3d, 0x6a, 0xd6, 0xe4, 0x15, 0x78, 0x11, 0x4f, 0xd9, 0x73, 0x15, 0xa7, 0x06,
	0x88, 0xf3, 0x38, 0x33, 0x2e, 0x97, 0x9a, 0x75, 0xd1, 0x90, 0x36, 0x80, 0x4c, 0x8d, 0xb1, 0x4d,
	0x9b, 0x1a, 0x37, 0xc0, 0x29, 0xd6, 0x91, 0x0c, 0x5a, 0x46, 0xa9, 0x2a, 0xf2, 0x10, 0x3a, 0x93,
	0xf8, 0x32, 0x65, 0x42, 0x17, 0x3d, 0x2b, 0x76, 0xc6, 0x14, 0x13, 0xd3, 0xba, 0x9b, 0xab, 0x0d,
	0xf2, 0xbb, 0x05, 0x58, 0x0f, 0x45, 0x9c, 0x49, 0x95, 0x9a, 0x89, 0xe1, 0x63, 0x58, 0x49, 0x58,
	0xae, 0xb9, 0x30, 0xa5, 0xb1, 0xad, 0x0c, 0xd6, 0x7b, 0xf5, 0xd8, 0xcd, 0xa4, 0xe8, 0x75, 0x04,
	0x1f, 0x80, 0x23, 0x15, 0x9f, 0x71, 0x61, 0x7a, 0xbc, 0x09, 0x57, 0x2a, 0x06, 0xd0, 0xc9, 0xf8,
	0x54, 0x2f, 0x14, 0x33, 0x2d, 0xaf, 0xd2, 0xba, 0xc4, 0x43, 0xf0, 0x12, 0x9e, 0x32, 0x91, 0x17,
	0x27, 0x2e, 0x6f, 0x5b, 0x3b, 0xeb, 0x83, 0xfb, 0x4d, 0xc8, 0xcd, 0x1e, 0x7b, 0x47, 0x35, 0x4c,
	0xaf, 0x7c, 0xb8, 0x0f, 0xce, 0x27, 0xc6, 0x67, 0xe7, 0x3a, 0x68, 0x9b, 0x04, 0x72, 0x5b, 0xc2,
	0xa9, 0x21, 0x69, 0xe5, 0xc0, 0x5d, 0x70, 0x32, 0x3e, 0xfd, 0xb0, 0xc8, 0x02, 0xc7, 0x5c, 0x01,
	0x1b, 0x6f, 0xf3, 0x40, 0xb4, 0x22, 0xb0, 0x07, 0x6e, 0xc2, 0xe6, 0xc5, 0x53, 0x5f, 0x06, 0x9d,
	0x7f, 0xd2, 0x0d, 0x83, 0x7b, 0xe0, 0xaa, 0xea, 0xb7, 0x11, 0xb8, 0x86, 0xff, 0xff, 0x5a, 0x67,
	0xa5, 0x40, 0x1b, 0x84, 0x3c, 0x02, 0xaf, 0xb9, 0x1e, 0x02, 0x38, 0x23, 0x1a, 0x9e, 0x1c, 0x0d,
	0xfd, 0x25, 0x74, 0x61, 0x39, 0x0a, 0xc7, 0x63, 0xdf, 0x42, 0x0f, 0xda, 0xaf, 0x87, 0x27, 0xd1,
	0xb1, 0x6f, 0x93, 0x01, 0x38, 0xe5, 0x55, 0x0a, 0x74, 0x3c, 0x8c, 0xa2, 0x21, 0xf5, 0x97, 0xf0,
	0x0e, 0xfc, 0xf7, 0x36, 0x1c, 0x87, 0x27, 0x47, 0x2f, 0xdf, 0x4d, 0xc2, 0xc3, 0x17, 0xe1, 0x68,
	0xe8, 0x5b, 0xd8, 0x81, 0xd6, 0xe4, 0x78, 0xe4, 0xdb, 0x83, 0x1f, 0x16, 0x74, 0xaa, 0x91, 0xe0,
	0x1b, 0x58, 0x3b, 0x54, 0x2c, 0xd6, 0xac, 0xde, 0xd8, 0xbc, 0x65, 0x6a, 0x5d, 0xbc, 0x21, 0x26,
	0x64, 0xe3, 0xeb, 0xcf, 0x5f, 0xdf, 0x6c, 0x9f, 0xac, 0xf4, 0x2f, 0x9e, 0xf4, 0x2b, 0x79, 0xdf,
	0xda, 0xc5, 0x53, 0x80, 0x11, 0xd3, 0x75, 0xec, 0x5f, 0x9c, 0xdd, 0xdb, 0x8e, 0x22, 0x81, 0x89,
	0x45, 0xf4, 0xaf, 0xc5, 0xf6, 0x3f, 0xf3, 0xe4, 0xcb, 0xc1, 0x1e, 0xdc, 0xe3, 0xb2, 0xa7, 0x15,
	0x4b, 0x99, 0x48, 0xe4, 0x22, 0xaf, 0x53, 0x0e, 0x56, 0xab, 0x98, 0x49, 0xf1, 0x97, 0x9f, 0x58,
	0xdf, 0xed, 0x16, 0x8d, 0x46, 0xef, 0x1d, 0xf3, 0x05, 0x78, 0xfa, 0x27, 0x00, 0x00, 0xff, 0xff,
	0xf8, 0x00, 0x48, 0xc8, 0x39, 0x04, 0x00, 0x00,
}
